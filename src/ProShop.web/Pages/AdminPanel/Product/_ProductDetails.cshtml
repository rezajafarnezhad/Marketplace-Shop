@using ProShop.Common.Helpers
@model ProShop.ViewModels.Product.ProductDetailsViewModel
@{
    var statusButtonClass = Model.Status switch
    {
        ProductStatus.Confirmed => "success",
        ProductStatus.Rejected => "danger",
        _ => "warning"
    };
}
<div class="card">
    <div class="card-header">
        <div class="card-title">
            جزییات محصول
            <b>
                <a href="@Model.Slug">
                    @Model.PersianTitle
                </a>
            </b>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div>
                <p class="fw-bold">
                    <span class="btn btn-primary" data-bs-toggle="collapse" data-bs-target="#product-files-collapse">
                        فایل (ها) |
                        تعداد عکس :@Model.ProductMedia.Count(x=> !x.IsVideo)
                        تعداد ویدیو :@Model.ProductMedia.Count(x=> x.IsVideo)
                    </span>
                    <span class="btn btn-secondary" data-bs-toggle="collapse" data-bs-target="#product-features-collapse">
                    ویژگی های محصول: @Model.ProductFeatures.Count
                    </span>
                    <span class="btn btn-info">
                        @if (Model.IsFake)
                        {
                            @:محصول غیر اصل میباشد
                        }
                        else
                        {
                            <text>اصل</text>
                        }
                    </span>
                    <span class="btn btn-@(statusButtonClass)">
                        وضعیت:
                        @Model.Status.GetEnumDisplayName()
                    </span>
                    <span class="btn btn-primary">
                        دسته بندی اصلی:
                        @Model.CategoryTitle
                    </span>
                </p>
            </div>
        </div>
        <div class="row">
            <div class="collapse" id="product-files-collapse">
                <div class="card card-body d-inline-block w-100">
                    @foreach (var image in Model.ProductMedia.Where(x => !x.IsVideo))
                    {
                        <img src="~/images/products/@image.FileName" class="Show_Images_In_Product_details" />
                    }
                    @foreach (var video in Model.ProductMedia.Where(x => x.IsVideo))
                    {
                        <video class="Show_Images_In_Product_details" controls>
                            <source src="~/videos/products/@video.FileName">
                            مرورگر شما از تگ ویدیو پشتیبانی نمیکند
                        </video>
                    }
                </div>
            </div>
            <div class="collapse" id="product-features-collapse">
                <div class="card card-body d-inline-block w-100">
                    @foreach (var feature in Model.ProductFeatures)
                    {
                        <p>
                            @feature.Feature.Title:
                            @foreach (var value in feature.Value.Split("|||"))
                            {
                                <span class="badge bg-success">@value</span>
                            }
                        </p>
                    }
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 col-lg-3">
                <p class="fw-bold">
                    @Html.DisplayNameFor(x=> x.EnglishTitle)
                </p>
                <p>
                    @(Model.EnglishTitle ?? "ندارد")
                </p>
            </div>
            <div class="col-md-4 col-lg-3">
                <p class="fw-bold">
                    @Html.DisplayNameFor(x=> x.PackWeight)
                </p>
                <p>
                    @Model.PackWeight
                    گرم
                </p>
            </div>
            <div class="col-md-4 col-lg-3">
                <p class="fw-bold">
                    @Html.DisplayNameFor(x=> x.PackLength)
                </p>
                <p>
                    @Model.PackLength
                    سانتیمتر
                </p>
            </div>
            <div class="col-md-4 col-lg-3">
                <p class="fw-bold">
                    @Html.DisplayNameFor(x=> x.PackWidth)
                </p>
                <p>
                    @Model.PackWidth
                    سانتیمتر
                </p>
            </div>
            <div class="col-md-4 col-lg-3">
                <p class="fw-bold">
                    @Html.DisplayNameFor(x=> x.PackHeight)
                </p>
                <p>
                    @Model.PackWeight
                    سانتیمتر
                </p>
            </div>
            <div class="col-md-4 col-lg-3">
                <p class="fw-bold">
                    @Html.DisplayNameFor(x=> x.SellerShopName)
                </p>
                <p>
                    @Model.SellerShopName
                </p>
            </div>
            <div class="col-md-4 col-lg-3">
                <p class="fw-bold">
                    @Html.DisplayNameFor(x=> x.BrandFullTitle)
                </p>
                <p>
                    @Model.BrandFullTitle
                </p>
            </div>

            <div>
                <p class="fw-bold">
                    @Html.DisplayNameFor(x=> x.ShortDescription)
                </p>
                <p>
                    @if (!string.IsNullOrWhiteSpace(Model.ShortDescription))
                    {
                        <text>بدون توضیح</text>
                    }
                    else
                    {
                        @Model.ShortDescription
                    }
                </p>
            </div>
            <div>
                <p class="fw-bold">
                    @Html.DisplayNameFor(x=> x.SpecialCheck)
                </p>
                <p>
                    @if (!string.IsNullOrWhiteSpace(Model.SpecialCheck))
                    {
                        <text>بدون توضیح</text>
                    }
                    else
                    {
                        @Html.Raw(Model.SpecialCheck)
                    }
                </p>
            </div>


            @if (Model.Status == ProductStatus.AwaitingInitialApproval)
            {
                <hr />

                <form call-function-in-the-end="productStatusInManagingProducts"
                  method="post" asp-page-handler="RejectProduct" class="mt-3 public-ajax-form">
                    <input type="hidden" asp-for="Id" />
                    <div class="text-danger" asp-validation-summary="All"></div>
                    <div class="mb-3">
                        <label asp-for="RejectReason" class="mb-3 form-label"></label>
                        <textarea asp-for="RejectReason" class="custom-tinymce"></textarea>
                        <span asp-validation-for="RejectReason" class="span-error-message"></span>
                    </div>
                    <button type="submit" class="btn btn-warning btn-block">ارسال مشکلات محصول</button>
                </form>



                <form call-function-in-the-end="productStatusInManagingProducts"
                  method="post" asp-page-handler="ConfirmProduct"
                  class="mt-3 public-ajax-form">
                    <input type="hidden" asp-for="Id" />
                    <button type="submit" class="btn btn-success btn-block">تایید کردن محصول</button>
                </form>


            }

            @if (Model.Status == ProductStatus.AwaitingInitialApproval)
            {


                <form call-function-in-the-end="productStatusInManagingProducts"
                  method="post" asp-page-handler="RemoveProduct"
                  class="mt-3 public-ajax-form">
                    <input type="hidden" asp-for="Id" />

                    <button type="button" class="delete-row-button btn btn-danger btn-block">حذف دائمی محصول</button>
                </form>

            }


        </div>
    </div>
</div>
