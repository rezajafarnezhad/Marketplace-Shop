/**
 * Minified by jsDelivr using Terser v5.9.0.
 * Original file: /npm/sweetalert2@11.3.0/src/instanceMethods/keydown-handler.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as dom from"../utils/dom/index.js";import{DismissReason}from"../utils/DismissReason.js";import{callIfFunction}from"../utils/utils.js";import{clickConfirm}from"../staticMethods/dom.js";import privateProps from"../privateProps.js";export const addKeydownHandler=(e,t,o,n)=>{t.keydownTarget&&t.keydownHandlerAdded&&(t.keydownTarget.removeEventListener("keydown",t.keydownHandler,{capture:t.keydownListenerCapture}),t.keydownHandlerAdded=!1),o.toast||(t.keydownHandler=t=>keydownHandler(e,t,n),t.keydownTarget=o.keydownListenerCapture?window:dom.getPopup(),t.keydownListenerCapture=o.keydownListenerCapture,t.keydownTarget.addEventListener("keydown",t.keydownHandler,{capture:t.keydownListenerCapture}),t.keydownHandlerAdded=!0)};export const setFocus=(e,t,o)=>{const n=dom.getFocusableElements();if(n.length)return(t+=o)===n.length?t=0:-1===t&&(t=n.length-1),n[t].focus();dom.getPopup().focus()};const arrowKeysNextButton=["ArrowRight","ArrowDown"],arrowKeysPreviousButton=["ArrowLeft","ArrowUp"],keydownHandler=(e,t,o)=>{const n=privateProps.innerParams.get(e);n&&(n.stopKeydownPropagation&&t.stopPropagation(),"Enter"===t.key?handleEnter(e,t,n):"Tab"===t.key?handleTab(t,n):[...arrowKeysNextButton,...arrowKeysPreviousButton].includes(t.key)?handleArrows(t.key):"Escape"===t.key&&handleEsc(t,n,o))},handleEnter=(e,t,o)=>{if(!t.isComposing&&t.target&&e.getInput()&&t.target.outerHTML===e.getInput().outerHTML){if(["textarea","file"].includes(o.input))return;clickConfirm(),t.preventDefault()}},handleTab=(e,t)=>{const o=e.target,n=dom.getFocusableElements();let r=-1;for(let e=0;e<n.length;e++)if(o===n[e]){r=e;break}e.shiftKey?setFocus(0,r,-1):setFocus(0,r,1),e.stopPropagation(),e.preventDefault()},handleArrows=e=>{if(![dom.getConfirmButton(),dom.getDenyButton(),dom.getCancelButton()].includes(document.activeElement))return;const t=arrowKeysNextButton.includes(e)?"nextElementSibling":"previousElementSibling",o=document.activeElement[t];o&&o.focus()},handleEsc=(e,t,o)=>{callIfFunction(t.allowEscapeKey)&&(e.preventDefault(),o(DismissReason.esc))};
//# sourceMappingURL=/sm/936970eab33c030bfa5dea5af8e523899f4de2ec35bf0448d590def5d3ae818f.map